import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Dados copiados da tabela acima (31 amostras)
data = [
    [8,95,80,0],
    [12,90,10,0],
    [2,80,70,1],
    [15,40,30,2],
    [7,80,90,0],
    [5,75,80,1],
    [2,65,35,1],
    [4,60,80,0],
    [2,80,10,2],
    [3,60,30,0],
    [8,90,60,0],
    [10,70,50,2],
    [4,70,20,1],
    [10,100,50,0],
    [3,90,100,0],
    [2,60,20,0],
    [5,40,15,0],
    [5,30,50,0],
    [10,90,80,0],
    [10,80,90,0],
    [5,70,50,0],
    [2,70,50,0],
    [4,60,5,5],
    [5,70,75,2],
    [6,80,10,0],
    [3,40,40,0],
    [10,60,75,1],
    [4,80,20,0],
    [10,100,85,0],
    [15,90,100,1],
    [4,70,50,0],
    [15,40,40,4]
]

df = pd.DataFrame(data, columns=['Acesso', 'InfoCompreensivel', 'Confianca', 'AlterouSenha'])

# Padronizar os dados
scaler = StandardScaler()
X_scaled = scaler.fit_transform(df)

# Aplicar KMeans
kmeans = KMeans(n_clusters=3, random_state=42)
clusters = kmeans.fit_predict(X_scaled)

df['Cluster'] = clusters
print(df.groupby('Cluster').mean())
